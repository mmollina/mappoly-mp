// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// myfunc
List myfunc(DataFrame ped_mat, DataFrame ind_pop, IntegerMatrix geno);
RcppExport SEXP _mappolymp_myfunc(SEXP ped_matSEXP, SEXP ind_popSEXP, SEXP genoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type ped_mat(ped_matSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type ind_pop(ind_popSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type geno(genoSEXP);
    rcpp_result_gen = Rcpp::wrap(myfunc(ped_mat, ind_pop, geno));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP calc_genoprob_multi_fam(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP est_hmm_map(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_mappolymp_myfunc", (DL_FUNC) &_mappolymp_myfunc, 3},
    {"calc_genoprob_multi_fam", (DL_FUNC) &calc_genoprob_multi_fam,  8},
    {"est_hmm_map",             (DL_FUNC) &est_hmm_map,             10},
    {NULL, NULL, 0}
};

RcppExport void R_init_mappolymp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
